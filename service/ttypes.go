// Autogenerated by Thrift Compiler (0.9.1)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package service

import (
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
	"github.com/DinoInc/BaseService/domain"
	"math"
)

// (needed to ensure safety because of naive import list construction.)
var _ = math.MinInt32
var _ = thrift.ZERO
var _ = fmt.Printf

var _ = domain.GoUnusedProtection__
var GoUnusedProtection__ int

type ReturnType struct {
	Code     int32  `thrift:"code,1,required"`
	Resource string `thrift:"resource,2"`
	Target   string `thrift:"target,3"`
	Value    string `thrift:"value,4"`
	Message  string `thrift:"message,5,required"`
}

func NewReturnType() *ReturnType {
	return &ReturnType{}
}

func (p *ReturnType) IsSetResource() bool {
	return p.Resource != ""
}

func (p *ReturnType) IsSetTarget() bool {
	return p.Target != ""
}

func (p *ReturnType) IsSetValue() bool {
	return p.Value != ""
}

func (p *ReturnType) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error", p)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *ReturnType) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s")
	} else {
		p.Code = v
	}
	return nil
}

func (p *ReturnType) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s")
	} else {
		p.Resource = v
	}
	return nil
}

func (p *ReturnType) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s")
	} else {
		p.Target = v
	}
	return nil
}

func (p *ReturnType) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s")
	} else {
		p.Value = v
	}
	return nil
}

func (p *ReturnType) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s")
	} else {
		p.Message = v
	}
	return nil
}

func (p *ReturnType) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("ReturnType"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("%T write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("%T write struct stop error: %s", err)
	}
	return nil
}

func (p *ReturnType) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("code", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:code: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Code)); err != nil {
		return fmt.Errorf("%T.code (1) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:code: %s", p, err)
	}
	return err
}

func (p *ReturnType) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetResource() {
		if err := oprot.WriteFieldBegin("resource", thrift.STRING, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:resource: %s", p, err)
		}
		if err := oprot.WriteString(string(p.Resource)); err != nil {
			return fmt.Errorf("%T.resource (2) field write error: %s", p)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:resource: %s", p, err)
		}
	}
	return err
}

func (p *ReturnType) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetTarget() {
		if err := oprot.WriteFieldBegin("target", thrift.STRING, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:target: %s", p, err)
		}
		if err := oprot.WriteString(string(p.Target)); err != nil {
			return fmt.Errorf("%T.target (3) field write error: %s", p)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:target: %s", p, err)
		}
	}
	return err
}

func (p *ReturnType) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetValue() {
		if err := oprot.WriteFieldBegin("value", thrift.STRING, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:value: %s", p, err)
		}
		if err := oprot.WriteString(string(p.Value)); err != nil {
			return fmt.Errorf("%T.value (4) field write error: %s", p)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:value: %s", p, err)
		}
	}
	return err
}

func (p *ReturnType) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("message", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:message: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Message)); err != nil {
		return fmt.Errorf("%T.message (5) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:message: %s", p, err)
	}
	return err
}

func (p *ReturnType) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ReturnType(%+v)", *p)
}
